/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_FLASH_ADAPTER_H
#define _MOCK_FLASH_ADAPTER_H

#include "unity.h"
#include "flash_adapter.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void mock_flash_adapter_Init(void);
void mock_flash_adapter_Destroy(void);
void mock_flash_adapter_Verify(void);




#define FlashAdapter_erase_IgnoreAndReturn(cmock_retval) FlashAdapter_erase_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void FlashAdapter_erase_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_erase_StopIgnore() FlashAdapter_erase_CMockStopIgnore()
void FlashAdapter_erase_CMockStopIgnore(void);
#define FlashAdapter_erase_ExpectAnyArgsAndReturn(cmock_retval) FlashAdapter_erase_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void FlashAdapter_erase_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_erase_ExpectAndReturn(firmware_size, flash_address, cmock_retval) FlashAdapter_erase_CMockExpectAndReturn(__LINE__, firmware_size, flash_address, cmock_retval)
void FlashAdapter_erase_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t firmware_size, uint32_t flash_address, bool cmock_to_return);
typedef bool (* CMOCK_FlashAdapter_erase_CALLBACK)(uint32_t firmware_size, uint32_t flash_address, int cmock_num_calls);
void FlashAdapter_erase_AddCallback(CMOCK_FlashAdapter_erase_CALLBACK Callback);
void FlashAdapter_erase_Stub(CMOCK_FlashAdapter_erase_CALLBACK Callback);
#define FlashAdapter_erase_StubWithCallback FlashAdapter_erase_Stub
#define FlashAdapter_erase_IgnoreArg_firmware_size() FlashAdapter_erase_CMockIgnoreArg_firmware_size(__LINE__)
void FlashAdapter_erase_CMockIgnoreArg_firmware_size(UNITY_LINE_TYPE cmock_line);
#define FlashAdapter_erase_IgnoreArg_flash_address() FlashAdapter_erase_CMockIgnoreArg_flash_address(__LINE__)
void FlashAdapter_erase_CMockIgnoreArg_flash_address(UNITY_LINE_TYPE cmock_line);
#define FlashAdapter_blockErase_IgnoreAndReturn(cmock_retval) FlashAdapter_blockErase_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void FlashAdapter_blockErase_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_blockErase_StopIgnore() FlashAdapter_blockErase_CMockStopIgnore()
void FlashAdapter_blockErase_CMockStopIgnore(void);
#define FlashAdapter_blockErase_ExpectAnyArgsAndReturn(cmock_retval) FlashAdapter_blockErase_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void FlashAdapter_blockErase_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_blockErase_ExpectAndReturn(address, cmock_retval) FlashAdapter_blockErase_CMockExpectAndReturn(__LINE__, address, cmock_retval)
void FlashAdapter_blockErase_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t address, bool cmock_to_return);
typedef bool (* CMOCK_FlashAdapter_blockErase_CALLBACK)(uint32_t address, int cmock_num_calls);
void FlashAdapter_blockErase_AddCallback(CMOCK_FlashAdapter_blockErase_CALLBACK Callback);
void FlashAdapter_blockErase_Stub(CMOCK_FlashAdapter_blockErase_CALLBACK Callback);
#define FlashAdapter_blockErase_StubWithCallback FlashAdapter_blockErase_Stub
#define FlashAdapter_blockErase_IgnoreArg_address() FlashAdapter_blockErase_CMockIgnoreArg_address(__LINE__)
void FlashAdapter_blockErase_CMockIgnoreArg_address(UNITY_LINE_TYPE cmock_line);
#define FlashAdapter_program_IgnoreAndReturn(cmock_retval) FlashAdapter_program_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void FlashAdapter_program_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_program_StopIgnore() FlashAdapter_program_CMockStopIgnore()
void FlashAdapter_program_CMockStopIgnore(void);
#define FlashAdapter_program_ExpectAnyArgsAndReturn(cmock_retval) FlashAdapter_program_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void FlashAdapter_program_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_program_ExpectAndReturn(address, buffer, length, cmock_retval) FlashAdapter_program_CMockExpectAndReturn(__LINE__, address, buffer, length, cmock_retval)
void FlashAdapter_program_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t address, uint8_t* buffer, uint32_t length, bool cmock_to_return);
typedef bool (* CMOCK_FlashAdapter_program_CALLBACK)(uint32_t address, uint8_t* buffer, uint32_t length, int cmock_num_calls);
void FlashAdapter_program_AddCallback(CMOCK_FlashAdapter_program_CALLBACK Callback);
void FlashAdapter_program_Stub(CMOCK_FlashAdapter_program_CALLBACK Callback);
#define FlashAdapter_program_StubWithCallback FlashAdapter_program_Stub
#define FlashAdapter_program_ExpectWithArrayAndReturn(address, buffer, buffer_Depth, length, cmock_retval) FlashAdapter_program_CMockExpectWithArrayAndReturn(__LINE__, address, buffer, buffer_Depth, length, cmock_retval)
void FlashAdapter_program_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t address, uint8_t* buffer, int buffer_Depth, uint32_t length, bool cmock_to_return);
#define FlashAdapter_program_ReturnThruPtr_buffer(buffer) FlashAdapter_program_CMockReturnMemThruPtr_buffer(__LINE__, buffer, sizeof(uint8_t))
#define FlashAdapter_program_ReturnArrayThruPtr_buffer(buffer, cmock_len) FlashAdapter_program_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_len * sizeof(*buffer))
#define FlashAdapter_program_ReturnMemThruPtr_buffer(buffer, cmock_size) FlashAdapter_program_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_size)
void FlashAdapter_program_CMockReturnMemThruPtr_buffer(UNITY_LINE_TYPE cmock_line, uint8_t const* buffer, size_t cmock_size);
#define FlashAdapter_program_IgnoreArg_address() FlashAdapter_program_CMockIgnoreArg_address(__LINE__)
void FlashAdapter_program_CMockIgnoreArg_address(UNITY_LINE_TYPE cmock_line);
#define FlashAdapter_program_IgnoreArg_buffer() FlashAdapter_program_CMockIgnoreArg_buffer(__LINE__)
void FlashAdapter_program_CMockIgnoreArg_buffer(UNITY_LINE_TYPE cmock_line);
#define FlashAdapter_program_IgnoreArg_length() FlashAdapter_program_CMockIgnoreArg_length(__LINE__)
void FlashAdapter_program_CMockIgnoreArg_length(UNITY_LINE_TYPE cmock_line);
#define FlashAdapter_readBytes_IgnoreAndReturn(cmock_retval) FlashAdapter_readBytes_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void FlashAdapter_readBytes_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_readBytes_StopIgnore() FlashAdapter_readBytes_CMockStopIgnore()
void FlashAdapter_readBytes_CMockStopIgnore(void);
#define FlashAdapter_readBytes_ExpectAnyArgsAndReturn(cmock_retval) FlashAdapter_readBytes_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void FlashAdapter_readBytes_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_readBytes_ExpectAndReturn(address, buffer, length, cmock_retval) FlashAdapter_readBytes_CMockExpectAndReturn(__LINE__, address, buffer, length, cmock_retval)
void FlashAdapter_readBytes_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t address, uint8_t* buffer, uint32_t length, bool cmock_to_return);
typedef bool (* CMOCK_FlashAdapter_readBytes_CALLBACK)(uint32_t address, uint8_t* buffer, uint32_t length, int cmock_num_calls);
void FlashAdapter_readBytes_AddCallback(CMOCK_FlashAdapter_readBytes_CALLBACK Callback);
void FlashAdapter_readBytes_Stub(CMOCK_FlashAdapter_readBytes_CALLBACK Callback);
#define FlashAdapter_readBytes_StubWithCallback FlashAdapter_readBytes_Stub
#define FlashAdapter_readBytes_ExpectWithArrayAndReturn(address, buffer, buffer_Depth, length, cmock_retval) FlashAdapter_readBytes_CMockExpectWithArrayAndReturn(__LINE__, address, buffer, buffer_Depth, length, cmock_retval)
void FlashAdapter_readBytes_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t address, uint8_t* buffer, int buffer_Depth, uint32_t length, bool cmock_to_return);
#define FlashAdapter_readBytes_ReturnThruPtr_buffer(buffer) FlashAdapter_readBytes_CMockReturnMemThruPtr_buffer(__LINE__, buffer, sizeof(uint8_t))
#define FlashAdapter_readBytes_ReturnArrayThruPtr_buffer(buffer, cmock_len) FlashAdapter_readBytes_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_len * sizeof(*buffer))
#define FlashAdapter_readBytes_ReturnMemThruPtr_buffer(buffer, cmock_size) FlashAdapter_readBytes_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_size)
void FlashAdapter_readBytes_CMockReturnMemThruPtr_buffer(UNITY_LINE_TYPE cmock_line, uint8_t const* buffer, size_t cmock_size);
#define FlashAdapter_readBytes_IgnoreArg_address() FlashAdapter_readBytes_CMockIgnoreArg_address(__LINE__)
void FlashAdapter_readBytes_CMockIgnoreArg_address(UNITY_LINE_TYPE cmock_line);
#define FlashAdapter_readBytes_IgnoreArg_buffer() FlashAdapter_readBytes_CMockIgnoreArg_buffer(__LINE__)
void FlashAdapter_readBytes_CMockIgnoreArg_buffer(UNITY_LINE_TYPE cmock_line);
#define FlashAdapter_readBytes_IgnoreArg_length() FlashAdapter_readBytes_CMockIgnoreArg_length(__LINE__)
void FlashAdapter_readBytes_CMockIgnoreArg_length(UNITY_LINE_TYPE cmock_line);
#define FlashAdapter_finish_IgnoreAndReturn(cmock_retval) FlashAdapter_finish_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void FlashAdapter_finish_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_finish_StopIgnore() FlashAdapter_finish_CMockStopIgnore()
void FlashAdapter_finish_CMockStopIgnore(void);
#define FlashAdapter_finish_ExpectAndReturn(cmock_retval) FlashAdapter_finish_CMockExpectAndReturn(__LINE__, cmock_retval)
void FlashAdapter_finish_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
typedef bool (* CMOCK_FlashAdapter_finish_CALLBACK)(int cmock_num_calls);
void FlashAdapter_finish_AddCallback(CMOCK_FlashAdapter_finish_CALLBACK Callback);
void FlashAdapter_finish_Stub(CMOCK_FlashAdapter_finish_CALLBACK Callback);
#define FlashAdapter_finish_StubWithCallback FlashAdapter_finish_Stub
#define FlashAdapter_isFlashRDPProtected_IgnoreAndReturn(cmock_retval) FlashAdapter_isFlashRDPProtected_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void FlashAdapter_isFlashRDPProtected_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_isFlashRDPProtected_StopIgnore() FlashAdapter_isFlashRDPProtected_CMockStopIgnore()
void FlashAdapter_isFlashRDPProtected_CMockStopIgnore(void);
#define FlashAdapter_isFlashRDPProtected_ExpectAndReturn(cmock_retval) FlashAdapter_isFlashRDPProtected_CMockExpectAndReturn(__LINE__, cmock_retval)
void FlashAdapter_isFlashRDPProtected_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
typedef bool (* CMOCK_FlashAdapter_isFlashRDPProtected_CALLBACK)(int cmock_num_calls);
void FlashAdapter_isFlashRDPProtected_AddCallback(CMOCK_FlashAdapter_isFlashRDPProtected_CALLBACK Callback);
void FlashAdapter_isFlashRDPProtected_Stub(CMOCK_FlashAdapter_isFlashRDPProtected_CALLBACK Callback);
#define FlashAdapter_isFlashRDPProtected_StubWithCallback FlashAdapter_isFlashRDPProtected_Stub
#define FlashAdapter_isFlashPCROPProtected_IgnoreAndReturn(cmock_retval) FlashAdapter_isFlashPCROPProtected_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void FlashAdapter_isFlashPCROPProtected_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_isFlashPCROPProtected_StopIgnore() FlashAdapter_isFlashPCROPProtected_CMockStopIgnore()
void FlashAdapter_isFlashPCROPProtected_CMockStopIgnore(void);
#define FlashAdapter_isFlashPCROPProtected_ExpectAndReturn(cmock_retval) FlashAdapter_isFlashPCROPProtected_CMockExpectAndReturn(__LINE__, cmock_retval)
void FlashAdapter_isFlashPCROPProtected_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
typedef bool (* CMOCK_FlashAdapter_isFlashPCROPProtected_CALLBACK)(int cmock_num_calls);
void FlashAdapter_isFlashPCROPProtected_AddCallback(CMOCK_FlashAdapter_isFlashPCROPProtected_CALLBACK Callback);
void FlashAdapter_isFlashPCROPProtected_Stub(CMOCK_FlashAdapter_isFlashPCROPProtected_CALLBACK Callback);
#define FlashAdapter_isFlashPCROPProtected_StubWithCallback FlashAdapter_isFlashPCROPProtected_Stub
#define FlashAdapter_setReadProtection_IgnoreAndReturn(cmock_retval) FlashAdapter_setReadProtection_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void FlashAdapter_setReadProtection_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_setReadProtection_StopIgnore() FlashAdapter_setReadProtection_CMockStopIgnore()
void FlashAdapter_setReadProtection_CMockStopIgnore(void);
#define FlashAdapter_setReadProtection_ExpectAnyArgsAndReturn(cmock_retval) FlashAdapter_setReadProtection_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void FlashAdapter_setReadProtection_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_setReadProtection_ExpectAndReturn(enable, cmock_retval) FlashAdapter_setReadProtection_CMockExpectAndReturn(__LINE__, enable, cmock_retval)
void FlashAdapter_setReadProtection_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool enable, bool cmock_to_return);
typedef bool (* CMOCK_FlashAdapter_setReadProtection_CALLBACK)(bool enable, int cmock_num_calls);
void FlashAdapter_setReadProtection_AddCallback(CMOCK_FlashAdapter_setReadProtection_CALLBACK Callback);
void FlashAdapter_setReadProtection_Stub(CMOCK_FlashAdapter_setReadProtection_CALLBACK Callback);
#define FlashAdapter_setReadProtection_StubWithCallback FlashAdapter_setReadProtection_Stub
#define FlashAdapter_setReadProtection_IgnoreArg_enable() FlashAdapter_setReadProtection_CMockIgnoreArg_enable(__LINE__)
void FlashAdapter_setReadProtection_CMockIgnoreArg_enable(UNITY_LINE_TYPE cmock_line);
#define FlashAdapter_setPCROP_IgnoreAndReturn(cmock_retval) FlashAdapter_setPCROP_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void FlashAdapter_setPCROP_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_setPCROP_StopIgnore() FlashAdapter_setPCROP_CMockStopIgnore()
void FlashAdapter_setPCROP_CMockStopIgnore(void);
#define FlashAdapter_setPCROP_ExpectAnyArgsAndReturn(cmock_retval) FlashAdapter_setPCROP_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void FlashAdapter_setPCROP_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define FlashAdapter_setPCROP_ExpectAndReturn(enable, protect_address_start, protect_address_end, cmock_retval) FlashAdapter_setPCROP_CMockExpectAndReturn(__LINE__, enable, protect_address_start, protect_address_end, cmock_retval)
void FlashAdapter_setPCROP_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool enable, uint32_t protect_address_start, uint32_t protect_address_end, bool cmock_to_return);
typedef bool (* CMOCK_FlashAdapter_setPCROP_CALLBACK)(bool enable, uint32_t protect_address_start, uint32_t protect_address_end, int cmock_num_calls);
void FlashAdapter_setPCROP_AddCallback(CMOCK_FlashAdapter_setPCROP_CALLBACK Callback);
void FlashAdapter_setPCROP_Stub(CMOCK_FlashAdapter_setPCROP_CALLBACK Callback);
#define FlashAdapter_setPCROP_StubWithCallback FlashAdapter_setPCROP_Stub
#define FlashAdapter_setPCROP_IgnoreArg_enable() FlashAdapter_setPCROP_CMockIgnoreArg_enable(__LINE__)
void FlashAdapter_setPCROP_CMockIgnoreArg_enable(UNITY_LINE_TYPE cmock_line);
#define FlashAdapter_setPCROP_IgnoreArg_protect_address_start() FlashAdapter_setPCROP_CMockIgnoreArg_protect_address_start(__LINE__)
void FlashAdapter_setPCROP_CMockIgnoreArg_protect_address_start(UNITY_LINE_TYPE cmock_line);
#define FlashAdapter_setPCROP_IgnoreArg_protect_address_end() FlashAdapter_setPCROP_CMockIgnoreArg_protect_address_end(__LINE__)
void FlashAdapter_setPCROP_CMockIgnoreArg_protect_address_end(UNITY_LINE_TYPE cmock_line);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
