/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_SECURITY_H
#define _MOCK_SECURITY_H

#include "unity.h"
#include "security.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void mock_security_Init(void);
void mock_security_Destroy(void);
void mock_security_Verify(void);




#define Security_setServerSecurityDataJson_IgnoreAndReturn(cmock_retval) Security_setServerSecurityDataJson_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Security_setServerSecurityDataJson_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define Security_setServerSecurityDataJson_StopIgnore() Security_setServerSecurityDataJson_CMockStopIgnore()
void Security_setServerSecurityDataJson_CMockStopIgnore(void);
#define Security_setServerSecurityDataJson_ExpectAndReturn(buffer, buffer_size, cmock_retval) Security_setServerSecurityDataJson_CMockExpectAndReturn(__LINE__, buffer, buffer_size, cmock_retval)
void Security_setServerSecurityDataJson_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, char* buffer, uint16_t buffer_size, bool cmock_to_return);
typedef bool (* CMOCK_Security_setServerSecurityDataJson_CALLBACK)(char* buffer, uint16_t buffer_size, int cmock_num_calls);
void Security_setServerSecurityDataJson_AddCallback(CMOCK_Security_setServerSecurityDataJson_CALLBACK Callback);
void Security_setServerSecurityDataJson_Stub(CMOCK_Security_setServerSecurityDataJson_CALLBACK Callback);
#define Security_setServerSecurityDataJson_StubWithCallback Security_setServerSecurityDataJson_Stub
#define Security_setServerSecurityDataJson_ReturnThruPtr_buffer(buffer) Security_setServerSecurityDataJson_CMockReturnMemThruPtr_buffer(__LINE__, buffer, sizeof(char))
#define Security_setServerSecurityDataJson_ReturnArrayThruPtr_buffer(buffer, cmock_len) Security_setServerSecurityDataJson_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_len * sizeof(*buffer))
#define Security_setServerSecurityDataJson_ReturnMemThruPtr_buffer(buffer, cmock_size) Security_setServerSecurityDataJson_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_size)
void Security_setServerSecurityDataJson_CMockReturnMemThruPtr_buffer(UNITY_LINE_TYPE cmock_line, char const* buffer, size_t cmock_size);
#define Security_setServerSecurityDataJson_IgnoreArg_buffer() Security_setServerSecurityDataJson_CMockIgnoreArg_buffer(__LINE__)
void Security_setServerSecurityDataJson_CMockIgnoreArg_buffer(UNITY_LINE_TYPE cmock_line);
#define Security_setServerSecurityDataJson_IgnoreArg_buffer_size() Security_setServerSecurityDataJson_CMockIgnoreArg_buffer_size(__LINE__)
void Security_setServerSecurityDataJson_CMockIgnoreArg_buffer_size(UNITY_LINE_TYPE cmock_line);
#define Security_getClientSecurityDataJson_IgnoreAndReturn(cmock_retval) Security_getClientSecurityDataJson_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Security_getClientSecurityDataJson_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define Security_getClientSecurityDataJson_StopIgnore() Security_getClientSecurityDataJson_CMockStopIgnore()
void Security_getClientSecurityDataJson_CMockStopIgnore(void);
#define Security_getClientSecurityDataJson_ExpectAndReturn(buffer, buffer_size, cmock_retval) Security_getClientSecurityDataJson_CMockExpectAndReturn(__LINE__, buffer, buffer_size, cmock_retval)
void Security_getClientSecurityDataJson_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, char* buffer, uint16_t buffer_size, bool cmock_to_return);
typedef bool (* CMOCK_Security_getClientSecurityDataJson_CALLBACK)(char* buffer, uint16_t buffer_size, int cmock_num_calls);
void Security_getClientSecurityDataJson_AddCallback(CMOCK_Security_getClientSecurityDataJson_CALLBACK Callback);
void Security_getClientSecurityDataJson_Stub(CMOCK_Security_getClientSecurityDataJson_CALLBACK Callback);
#define Security_getClientSecurityDataJson_StubWithCallback Security_getClientSecurityDataJson_Stub
#define Security_getClientSecurityDataJson_ReturnThruPtr_buffer(buffer) Security_getClientSecurityDataJson_CMockReturnMemThruPtr_buffer(__LINE__, buffer, sizeof(char))
#define Security_getClientSecurityDataJson_ReturnArrayThruPtr_buffer(buffer, cmock_len) Security_getClientSecurityDataJson_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_len * sizeof(*buffer))
#define Security_getClientSecurityDataJson_ReturnMemThruPtr_buffer(buffer, cmock_size) Security_getClientSecurityDataJson_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_size)
void Security_getClientSecurityDataJson_CMockReturnMemThruPtr_buffer(UNITY_LINE_TYPE cmock_line, char const* buffer, size_t cmock_size);
#define Security_getClientSecurityDataJson_IgnoreArg_buffer() Security_getClientSecurityDataJson_CMockIgnoreArg_buffer(__LINE__)
void Security_getClientSecurityDataJson_CMockIgnoreArg_buffer(UNITY_LINE_TYPE cmock_line);
#define Security_getClientSecurityDataJson_IgnoreArg_buffer_size() Security_getClientSecurityDataJson_CMockIgnoreArg_buffer_size(__LINE__)
void Security_getClientSecurityDataJson_CMockIgnoreArg_buffer_size(UNITY_LINE_TYPE cmock_line);
#define Security_isSecured_IgnoreAndReturn(cmock_retval) Security_isSecured_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Security_isSecured_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define Security_isSecured_StopIgnore() Security_isSecured_CMockStopIgnore()
void Security_isSecured_CMockStopIgnore(void);
#define Security_isSecured_ExpectAndReturn(cmock_retval) Security_isSecured_CMockExpectAndReturn(__LINE__, cmock_retval)
void Security_isSecured_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
typedef bool (* CMOCK_Security_isSecured_CALLBACK)(int cmock_num_calls);
void Security_isSecured_AddCallback(CMOCK_Security_isSecured_CALLBACK Callback);
void Security_isSecured_Stub(CMOCK_Security_isSecured_CALLBACK Callback);
#define Security_isSecured_StubWithCallback Security_isSecured_Stub
#define Security_decrypt_IgnoreAndReturn(cmock_retval) Security_decrypt_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Security_decrypt_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define Security_decrypt_StopIgnore() Security_decrypt_CMockStopIgnore()
void Security_decrypt_CMockStopIgnore(void);
#define Security_decrypt_ExpectAndReturn(mac, nonce, cipher_data, plain_data, data_length, cmock_retval) Security_decrypt_CMockExpectAndReturn(__LINE__, mac, nonce, cipher_data, plain_data, data_length, cmock_retval)
void Security_decrypt_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t* mac, const uint8_t* nonce, const uint8_t* cipher_data, uint8_t* plain_data, const uint16_t data_length, bool cmock_to_return);
typedef bool (* CMOCK_Security_decrypt_CALLBACK)(const uint8_t* mac, const uint8_t* nonce, const uint8_t* cipher_data, uint8_t* plain_data, const uint16_t data_length, int cmock_num_calls);
void Security_decrypt_AddCallback(CMOCK_Security_decrypt_CALLBACK Callback);
void Security_decrypt_Stub(CMOCK_Security_decrypt_CALLBACK Callback);
#define Security_decrypt_StubWithCallback Security_decrypt_Stub
#define Security_decrypt_ExpectWithArrayAndReturn(mac, mac_Depth, nonce, nonce_Depth, cipher_data, cipher_data_Depth, plain_data, plain_data_Depth, data_length, cmock_retval) Security_decrypt_CMockExpectWithArrayAndReturn(__LINE__, mac, mac_Depth, nonce, nonce_Depth, cipher_data, cipher_data_Depth, plain_data, plain_data_Depth, data_length, cmock_retval)
void Security_decrypt_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t* mac, int mac_Depth, const uint8_t* nonce, int nonce_Depth, const uint8_t* cipher_data, int cipher_data_Depth, uint8_t* plain_data, int plain_data_Depth, const uint16_t data_length, bool cmock_to_return);
#define Security_decrypt_ReturnThruPtr_plain_data(plain_data) Security_decrypt_CMockReturnMemThruPtr_plain_data(__LINE__, plain_data, sizeof(uint8_t))
#define Security_decrypt_ReturnArrayThruPtr_plain_data(plain_data, cmock_len) Security_decrypt_CMockReturnMemThruPtr_plain_data(__LINE__, plain_data, cmock_len * sizeof(*plain_data))
#define Security_decrypt_ReturnMemThruPtr_plain_data(plain_data, cmock_size) Security_decrypt_CMockReturnMemThruPtr_plain_data(__LINE__, plain_data, cmock_size)
void Security_decrypt_CMockReturnMemThruPtr_plain_data(UNITY_LINE_TYPE cmock_line, uint8_t const* plain_data, size_t cmock_size);
#define Security_decrypt_IgnoreArg_mac() Security_decrypt_CMockIgnoreArg_mac(__LINE__)
void Security_decrypt_CMockIgnoreArg_mac(UNITY_LINE_TYPE cmock_line);
#define Security_decrypt_IgnoreArg_nonce() Security_decrypt_CMockIgnoreArg_nonce(__LINE__)
void Security_decrypt_CMockIgnoreArg_nonce(UNITY_LINE_TYPE cmock_line);
#define Security_decrypt_IgnoreArg_cipher_data() Security_decrypt_CMockIgnoreArg_cipher_data(__LINE__)
void Security_decrypt_CMockIgnoreArg_cipher_data(UNITY_LINE_TYPE cmock_line);
#define Security_decrypt_IgnoreArg_plain_data() Security_decrypt_CMockIgnoreArg_plain_data(__LINE__)
void Security_decrypt_CMockIgnoreArg_plain_data(UNITY_LINE_TYPE cmock_line);
#define Security_decrypt_IgnoreArg_data_length() Security_decrypt_CMockIgnoreArg_data_length(__LINE__)
void Security_decrypt_CMockIgnoreArg_data_length(UNITY_LINE_TYPE cmock_line);
#define Security_wipeKeys_Ignore() Security_wipeKeys_CMockIgnore()
void Security_wipeKeys_CMockIgnore(void);
#define Security_wipeKeys_StopIgnore() Security_wipeKeys_CMockStopIgnore()
void Security_wipeKeys_CMockStopIgnore(void);
#define Security_wipeKeys_Expect() Security_wipeKeys_CMockExpect(__LINE__)
void Security_wipeKeys_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Security_wipeKeys_CALLBACK)(int cmock_num_calls);
void Security_wipeKeys_AddCallback(CMOCK_Security_wipeKeys_CALLBACK Callback);
void Security_wipeKeys_Stub(CMOCK_Security_wipeKeys_CALLBACK Callback);
#define Security_wipeKeys_StubWithCallback Security_wipeKeys_Stub

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
