/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_SOFTWARE_INFO_H
#define _MOCK_SOFTWARE_INFO_H

#include "unity.h"
#include "software_info.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void mock_software_info_Init(void);
void mock_software_info_Destroy(void);
void mock_software_info_Verify(void);




#define SwInfo_getDataJson_IgnoreAndReturn(cmock_retval) SwInfo_getDataJson_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void SwInfo_getDataJson_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define SwInfo_getDataJson_StopIgnore() SwInfo_getDataJson_CMockStopIgnore()
void SwInfo_getDataJson_CMockStopIgnore(void);
#define SwInfo_getDataJson_ExpectAnyArgsAndReturn(cmock_retval) SwInfo_getDataJson_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void SwInfo_getDataJson_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define SwInfo_getDataJson_ExpectAndReturn(buffer, size, cmock_retval) SwInfo_getDataJson_CMockExpectAndReturn(__LINE__, buffer, size, cmock_retval)
void SwInfo_getDataJson_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* buffer, uint16_t size, bool cmock_to_return);
typedef bool (* CMOCK_SwInfo_getDataJson_CALLBACK)(uint8_t* buffer, uint16_t size, int cmock_num_calls);
void SwInfo_getDataJson_AddCallback(CMOCK_SwInfo_getDataJson_CALLBACK Callback);
void SwInfo_getDataJson_Stub(CMOCK_SwInfo_getDataJson_CALLBACK Callback);
#define SwInfo_getDataJson_StubWithCallback SwInfo_getDataJson_Stub
#define SwInfo_getDataJson_ExpectWithArrayAndReturn(buffer, buffer_Depth, size, cmock_retval) SwInfo_getDataJson_CMockExpectWithArrayAndReturn(__LINE__, buffer, buffer_Depth, size, cmock_retval)
void SwInfo_getDataJson_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* buffer, int buffer_Depth, uint16_t size, bool cmock_to_return);
#define SwInfo_getDataJson_ReturnThruPtr_buffer(buffer) SwInfo_getDataJson_CMockReturnMemThruPtr_buffer(__LINE__, buffer, sizeof(uint8_t))
#define SwInfo_getDataJson_ReturnArrayThruPtr_buffer(buffer, cmock_len) SwInfo_getDataJson_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_len * sizeof(*buffer))
#define SwInfo_getDataJson_ReturnMemThruPtr_buffer(buffer, cmock_size) SwInfo_getDataJson_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_size)
void SwInfo_getDataJson_CMockReturnMemThruPtr_buffer(UNITY_LINE_TYPE cmock_line, uint8_t const* buffer, size_t cmock_size);
#define SwInfo_getDataJson_IgnoreArg_buffer() SwInfo_getDataJson_CMockIgnoreArg_buffer(__LINE__)
void SwInfo_getDataJson_CMockIgnoreArg_buffer(UNITY_LINE_TYPE cmock_line);
#define SwInfo_getDataJson_IgnoreArg_size() SwInfo_getDataJson_CMockIgnoreArg_size(__LINE__)
void SwInfo_getDataJson_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define SwInfo_getVersion_IgnoreAndReturn(cmock_retval) SwInfo_getVersion_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void SwInfo_getVersion_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define SwInfo_getVersion_StopIgnore() SwInfo_getVersion_CMockStopIgnore()
void SwInfo_getVersion_CMockStopIgnore(void);
#define SwInfo_getVersion_ExpectAnyArgsAndReturn(cmock_retval) SwInfo_getVersion_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void SwInfo_getVersion_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define SwInfo_getVersion_ExpectAndReturn(buffer, size, cmock_retval) SwInfo_getVersion_CMockExpectAndReturn(__LINE__, buffer, size, cmock_retval)
void SwInfo_getVersion_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* buffer, uint16_t size, bool cmock_to_return);
typedef bool (* CMOCK_SwInfo_getVersion_CALLBACK)(uint8_t* buffer, uint16_t size, int cmock_num_calls);
void SwInfo_getVersion_AddCallback(CMOCK_SwInfo_getVersion_CALLBACK Callback);
void SwInfo_getVersion_Stub(CMOCK_SwInfo_getVersion_CALLBACK Callback);
#define SwInfo_getVersion_StubWithCallback SwInfo_getVersion_Stub
#define SwInfo_getVersion_ExpectWithArrayAndReturn(buffer, buffer_Depth, size, cmock_retval) SwInfo_getVersion_CMockExpectWithArrayAndReturn(__LINE__, buffer, buffer_Depth, size, cmock_retval)
void SwInfo_getVersion_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* buffer, int buffer_Depth, uint16_t size, bool cmock_to_return);
#define SwInfo_getVersion_ReturnThruPtr_buffer(buffer) SwInfo_getVersion_CMockReturnMemThruPtr_buffer(__LINE__, buffer, sizeof(uint8_t))
#define SwInfo_getVersion_ReturnArrayThruPtr_buffer(buffer, cmock_len) SwInfo_getVersion_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_len * sizeof(*buffer))
#define SwInfo_getVersion_ReturnMemThruPtr_buffer(buffer, cmock_size) SwInfo_getVersion_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_size)
void SwInfo_getVersion_CMockReturnMemThruPtr_buffer(UNITY_LINE_TYPE cmock_line, uint8_t const* buffer, size_t cmock_size);
#define SwInfo_getVersion_IgnoreArg_buffer() SwInfo_getVersion_CMockIgnoreArg_buffer(__LINE__)
void SwInfo_getVersion_CMockIgnoreArg_buffer(UNITY_LINE_TYPE cmock_line);
#define SwInfo_getVersion_IgnoreArg_size() SwInfo_getVersion_CMockIgnoreArg_size(__LINE__)
void SwInfo_getVersion_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
