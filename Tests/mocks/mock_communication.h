/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_COMMUNICATION_H
#define _MOCK_COMMUNICATION_H

#include "unity.h"
#include "communication.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void mock_communication_Init(void);
void mock_communication_Destroy(void);
void mock_communication_Verify(void);




#define Communication_init_Ignore() Communication_init_CMockIgnore()
void Communication_init_CMockIgnore(void);
#define Communication_init_StopIgnore() Communication_init_CMockStopIgnore()
void Communication_init_CMockStopIgnore(void);
#define Communication_init_Expect() Communication_init_CMockExpect(__LINE__)
void Communication_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Communication_init_CALLBACK)(int cmock_num_calls);
void Communication_init_AddCallback(CMOCK_Communication_init_CALLBACK Callback);
void Communication_init_Stub(CMOCK_Communication_init_CALLBACK Callback);
#define Communication_init_StubWithCallback Communication_init_Stub
#define Communication_handler_IgnoreAndReturn(cmock_retval) Communication_handler_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Communication_handler_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define Communication_handler_StopIgnore() Communication_handler_CMockStopIgnore()
void Communication_handler_CMockStopIgnore(void);
#define Communication_handler_ExpectAndReturn(buf, length, cmock_retval) Communication_handler_CMockExpectAndReturn(__LINE__, buf, length, cmock_retval)
void Communication_handler_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* buf, uint32_t length, bool cmock_to_return);
typedef bool (* CMOCK_Communication_handler_CALLBACK)(uint8_t* buf, uint32_t length, int cmock_num_calls);
void Communication_handler_AddCallback(CMOCK_Communication_handler_CALLBACK Callback);
void Communication_handler_Stub(CMOCK_Communication_handler_CALLBACK Callback);
#define Communication_handler_StubWithCallback Communication_handler_Stub
#define Communication_handler_ExpectWithArrayAndReturn(buf, buf_Depth, length, cmock_retval) Communication_handler_CMockExpectWithArrayAndReturn(__LINE__, buf, buf_Depth, length, cmock_retval)
void Communication_handler_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* buf, int buf_Depth, uint32_t length, bool cmock_to_return);
#define Communication_handler_ReturnThruPtr_buf(buf) Communication_handler_CMockReturnMemThruPtr_buf(__LINE__, buf, sizeof(uint8_t))
#define Communication_handler_ReturnArrayThruPtr_buf(buf, cmock_len) Communication_handler_CMockReturnMemThruPtr_buf(__LINE__, buf, cmock_len * sizeof(*buf))
#define Communication_handler_ReturnMemThruPtr_buf(buf, cmock_size) Communication_handler_CMockReturnMemThruPtr_buf(__LINE__, buf, cmock_size)
void Communication_handler_CMockReturnMemThruPtr_buf(UNITY_LINE_TYPE cmock_line, uint8_t const* buf, size_t cmock_size);
#define Communication_handler_IgnoreArg_buf() Communication_handler_CMockIgnoreArg_buf(__LINE__)
void Communication_handler_CMockIgnoreArg_buf(UNITY_LINE_TYPE cmock_line);
#define Communication_handler_IgnoreArg_length() Communication_handler_CMockIgnoreArg_length(__LINE__)
void Communication_handler_CMockIgnoreArg_length(UNITY_LINE_TYPE cmock_line);
#define Communication_mainLoop_IgnoreAndReturn(cmock_retval) Communication_mainLoop_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Communication_mainLoop_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define Communication_mainLoop_StopIgnore() Communication_mainLoop_CMockStopIgnore()
void Communication_mainLoop_CMockStopIgnore(void);
#define Communication_mainLoop_ExpectAndReturn(timeout, cmock_retval) Communication_mainLoop_CMockExpectAndReturn(__LINE__, timeout, cmock_retval)
void Communication_mainLoop_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint32_t timeout, bool cmock_to_return);
typedef bool (* CMOCK_Communication_mainLoop_CALLBACK)(const uint32_t timeout, int cmock_num_calls);
void Communication_mainLoop_AddCallback(CMOCK_Communication_mainLoop_CALLBACK Callback);
void Communication_mainLoop_Stub(CMOCK_Communication_mainLoop_CALLBACK Callback);
#define Communication_mainLoop_StubWithCallback Communication_mainLoop_Stub
#define Communication_mainLoop_IgnoreArg_timeout() Communication_mainLoop_CMockIgnoreArg_timeout(__LINE__)
void Communication_mainLoop_CMockIgnoreArg_timeout(UNITY_LINE_TYPE cmock_line);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
